{
  "scope": "source.js",

  "completions":
  [
    ["description-Function.prototype.bind()", "/*\n\tDescription:\n\tThe bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.\n\n\tSyntax:\n\tfun.bind(thisArg[, arg1[, arg2[, ...]]])\n*/"],
    ["description-Function.prototype.apply()", "/*\n\tDescription:\n\tThe apply() method calls a function with a given this value and arguments provided as an array (or an array-like object).\n\n\tSyntax:\n\tfun.apply(thisArg, [argsArray])\n*/"],
    ["description-Function", "/*\n\tDescription:\n\tThe Function constructor creates a new Function object. In JavaScript every function is actually a Function object.\n\n\tSyntax:\n\tnew Function ([arg1[, arg2[, ...argN]],] functionBody)\n*/"],
    ["description-Function.prototype.call()", "/*\n\tDescription:\n\tThe call() method calls a function with a given this value and arguments provided individually.\n\n\tSyntax:\n\tfun.call(thisArg[, arg1[, arg2[, ...]]])\n*/"],
    ["description-Function.prototype.toString()", "/*\n\tDescription:\n\tThe toString() method returns a string representing the source code of the function.\n\n\tSyntax:\n\tfunction.toString(indentation)\n*/"],
    ["description-Function.length", "/*\n\tThe length property specifies the number of arguments expected by the function.\n*/"],
    ["description-bind()", "/*\n\tDescription:\n\tThe bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.\n\n\tSyntax:\n\tfun.bind(thisArg[, arg1[, arg2[, ...]]])\n*/"],
    ["description-apply()", "/*\n\tDescription:\n\tThe apply() method calls a function with a given this value and arguments provided as an array (or an array-like object).\n\n\tSyntax:\n\tfun.apply(thisArg, [argsArray])\n*/"],
    ["description-call()", "/*\n\tDescription:\n\tThe call() method calls a function with a given this value and arguments provided individually.\n\n\tSyntax:\n\tfun.call(thisArg[, arg1[, arg2[, ...]]])\n*/"],
    ["description-toString()", "/*\n\tDescription:\n\tThe toString() method returns a string representing the source code of the function.\n\n\tSyntax:\n\tfunction.toString(indentation)\n*/"],
    ["description-length", "/*\n\tThe length property specifies the number of arguments expected by the function.\n*/"]
  ]
}