{
  "scope": "source.js",

  "completions":
  [
    {
      "trigger": "baseURI\tNode",
      "contents": "baseURI"
    },
    {
      "trigger": "childNodes\tNode",
      "contents": "childNodes"
    },
    {
      "trigger": "firstChild\tNode",
      "contents": "firstChild"
    },
    {
      "trigger": "lastChild\tNode",
      "contents": "lastChild"
    },
    {
      "trigger": "localName\tNode",
      "contents": "localName"
    },
    {
      "trigger": "namespaceURI\tNode",
      "contents": "namespaceURI"
    },
    {
      "trigger": "nextSibling\tNode",
      "contents": "nextSibling"
    },
    {
      "trigger": "nodeName\tNode",
      "contents": "nodeName"
    },
    {
      "trigger": "nodeType\tNode",
      "contents": "nodeType"
    },
    {
      "trigger": "nodeValue\tNode",
      "contents": "nodeValue"
    },
    {
      "trigger": "ownerDocument\tNode",
      "contents": "ownerDocument"
    },
    {
      "trigger": "parentElement\tNode",
      "contents": "parentElement"
    },
    {
      "trigger": "parentNode\tNode",
      "contents": "parentNode"
    },
    {
      "trigger": "prefix\tNode",
      "contents": "prefix"
    },
    {
      "trigger": "previousSibling\tNode",
      "contents": "previousSibling"
    },
    {
      "trigger": "textContent\tNode",
      "contents": "textContent"
    },
    {
      "trigger": "appendChild(aChild)\tNode",
      "contents": "appendChild(${1:aChild})"
    },
    {
      "trigger": "cloneNode(deep)\tNode",
      "contents": "cloneNode(${1:deep})"
    },
    {
      "trigger": "compareDocumentPosition(otherNode)\tNode",
      "contents": "compareDocumentPosition(${1:otherNode})"
    },
    {
      "trigger": "contains(otherNode)\tNode",
      "contents": "contains(${1:otherNode})"
    },
    {
      "trigger": "hasAttributes()\tNode",
      "contents": "hasAttributes()"
    },
    {
      "trigger": "hasChildNodes()\tNode",
      "contents": "hasChildNodes()"
    },
    {
      "trigger": "insertBefore(newElement, referenceElement)\tNode",
      "contents": "insertBefore(${1:newElement}, ${2:referenceElement})"
    },
    {
      "trigger": "isDefaultNamespace(namespaceURI)\tNode",
      "contents": "isDefaultNamespace(${1:namespaceURI})"
    },
    {
      "trigger": "isEqualNode(arg)\tNode",
      "contents": "isEqualNode(${1:arg})"
    },
    {
      "trigger": "lookupNamespaceURI()\tNode",
      "contents": "lookupNamespaceURI()"
    },
    {
      "trigger": "lookupPrefix()\tNode",
      "contents": "lookupPrefix()"
    },
    {
      "trigger": "normalize()\tNode",
      "contents": "normalize()"
    },
    {
      "trigger": "removeChild(child)\tNode",
      "contents": "removeChild(${1:child})"
    },
    {
      "trigger": "replaceChild(newChild, oldChild)\tNode",
      "contents": "replaceChild(${1:newChild}, ${2:oldChild})"
    }
  ]
}