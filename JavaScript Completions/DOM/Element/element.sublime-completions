{
  "scope": "source.js",

  "completions":
  [
    {
      "trigger": "accessKey\tElement",
      "contents": "accessKey"
    },
    {
      "trigger": "attributes\tElement",
      "contents": "attributes"
    },
    {
      "trigger": "classList\tElement",
      "contents": "classList"
    },
    {
      "trigger": "className\tElement",
      "contents": "className"
    },
    {
      "trigger": "clientHeight\tElement",
      "contents": "clientHeight"
    },
    {
      "trigger": "clientLeft\tElement",
      "contents": "clientLeft"
    },
    {
      "trigger": "clientTop\tElement",
      "contents": "clientTop"
    },
    {
      "trigger": "clientWidth\tElement",
      "contents": "clientWidth"
    },
    {
      "trigger": "id\tElement",
      "contents": "id"
    },
    {
      "trigger": "innerHTML\tElement",
      "contents": "innerHTML"
    },
    {
      "trigger": "name\tElement",
      "contents": "name"
    },
    {
      "trigger": "onafterscriptexecute\tElement",
      "contents": "onafterscriptexecute"
    },
    {
      "trigger": "onbeforescriptexecute\tElement",
      "contents": "onbeforescriptexecute"
    },
    {
      "trigger": "outerHTML\tElement",
      "contents": "outerHTML"
    },
    {
      "trigger": "scrollHeight\tElement",
      "contents": "scrollHeight"
    },
    {
      "trigger": "scrollLeft\tElement",
      "contents": "scrollLeft"
    },
    {
      "trigger": "scrollTop\tElement",
      "contents": "scrollTop"
    },
    {
      "trigger": "scrollWidth\tElement",
      "contents": "scrollWidth"
    },
    {
      "trigger": "tagName\tElement",
      "contents": "tagName"
    },
    {
      "trigger": "getElementsByClassName(names)\tElement",
      "contents": "getElementsByClassName(${1:names})"
    },
    {
      "trigger": "getElementsByName(name)\tElement",
      "contents": "getElementsByName(${1:name})"
    },
    {
      "trigger": "getElementById(id)\tElement",
      "contents": "getElementById(${1:id})"
    },
    {
      "trigger": "getElementsByTagName(name)\tElement",
      "contents": "getElementsByTagName(${1:name})"
    },
    {
      "trigger": "getElementsByTagNameNS(namespace, name)\tElement",
      "contents": "getElementsByTagNameNS(${1:namespace}, ${2:name})"
    },
    {
      "trigger": "querySelector(selectors)\tElement",
      "contents": "querySelector(${1:selectors})"
    },
    {
      "trigger": "querySelectorAll(selectors)\tElement",
      "contents": "querySelectorAll(${1:selectors})"
    },
    {
      "trigger": "getAttribute(attributeName)\tElement",
      "contents": "getAttribute(${1:attributeName})"
    },
    {
      "trigger": "getAttributeNS(namespace, name)\tElement",
      "contents": "getAttributeNS(${1:namespace}, ${2:name})"
    },
    {
      "trigger": "getAttributeNode(attrName)\tElement",
      "contents": "getAttributeNode(${1:attrName})"
    },
    {
      "trigger": "getAttributeNodeNS(namespace, nodeName)\tElement",
      "contents": "getAttributeNodeNS(${1:namespace}, ${2:nodeName})"
    },
    {
      "trigger": "getBoundingClientRect()\tElement",
      "contents": "getBoundingClientRect()"
    },
    {
      "trigger": "getClientRects()\tElement",
      "contents": "getClientRects()"
    },
    {
      "trigger": "hasAttribute(attrName)\tElement",
      "contents": "hasAttribute(${1:attrName})"
    },
    {
      "trigger": "hasAttributeNS(namespace, localName)\tElement",
      "contents": "hasAttributeNS(${1:namespace}, ${2:localName])"
    },
    {
      "trigger": "insertAdjacentHTML(position, text)\tElement",
      "contents": "insertAdjacentHTML(${1:position}, ${2:text})"
    },
    {
      "trigger": "removeAttribute(attrName)\tElement",
      "contents": "removeAttribute(${1:attrName})"
    },
    {
      "trigger": "removeAttributeNS(namespace, attrName)\tElement",
      "contents": "removeAttributeNS(${1:namespace}, ${2:attrName})"
    },
    {
      "trigger": "removeAttributeNode(attributeNode)\tElement",
      "contents": "removeAttributeNode(${1:attributeNode})"
    },
    {
      "trigger": "setAttribute(name, value)\tElement",
      "contents": "setAttribute(${1:name}, ${2:value})"
    },
    {
      "trigger": "setAttributeNS(namespace, name, value)\tElement",
      "contents": "setAttributeNS(${1:namespace}, ${2:name}, ${3:value})"
    },
    {
      "trigger": "setAttributeNode(attribute)\tElement",
      "contents": "setAttributeNode(${1:attribute})"
    },
    {
      "trigger": "setAttributeNodeNS(attributeNode)\tElement",
      "contents": "setAttributeNodeNS(${1:attributeNode})"
    }
  ]
}