{
  "scope": "source.js",

  "completions":
  [

    {
      "trigger": "document\tDocument",
      "contents": "document"
    },
    {
      "trigger": "document.URL\tDocument",
      "contents": "document.URL"
    },
    {
      "trigger": "URL\tDocument",
      "contents": "URL"
    },
    {
      "trigger": "document.activeElement\tDocument",
      "contents": "document.activeElement"
    },
    {
      "trigger": "activeElement\tDocument",
      "contents": "activeElement"
    },
    {
      "trigger": "document.anchors\tDocument",
      "contents": "document.anchors"
    },
    {
      "trigger": "anchors\tDocument",
      "contents": "anchors"
    },
    {
      "trigger": "document.applets\tDocument",
      "contents": "document.applets"
    },
    {
      "trigger": "applets\tDocument",
      "contents": "applets"
    },
    {
      "trigger": "document.body\tDocument",
      "contents": "document.body"
    },
    {
      "trigger": "body\tDocument",
      "contents": "body"
    },
    {
      "trigger": "document.defaultView\tDocument",
      "contents": "document.defaultView"
    },
    {
      "trigger": "defaultView\tDocument",
      "contents": "defaultView"
    },
    {
      "trigger": "document.designMode\tDocument",
      "contents": "document.designMode"
    },
    {
      "trigger": "designMode\tDocument",
      "contents": "designMode"
    },
    {
      "trigger": "document.domain\tDocument",
      "contents": "document.domain"
    },
    {
      "trigger": "domain\tDocument",
      "contents": "domain"
    },
    {
      "trigger": "document.embeds\tDocument",
      "contents": "document.embeds"
    },
    {
      "trigger": "embeds\tDocument",
      "contents": "embeds"
    },
    {
      "trigger": "document.forms\tDocument",
      "contents": "document.forms"
    },
    {
      "trigger": "forms\tDocument",
      "contents": "forms"
    },
    {
      "trigger": "document.head\tDocument",
      "contents": "document.head"
    },
    {
      "trigger": "head\tDocument",
      "contents": "head"
    },
    {
      "trigger": "document.images\tDocument",
      "contents": "document.images"
    },
    {
      "trigger": "images\tDocument",
      "contents": "images"
    },
    {
      "trigger": "document.lastModified\tDocument",
      "contents": "document.lastModified"
    },
    {
      "trigger": "lastModified\tDocument",
      "contents": "lastModified"
    },
    {
      "trigger": "document.location\tDocument",
      "contents": "document.location"
    },
    {
      "trigger": "location\tDocument",
      "contents": "location"
    },
    {
      "trigger": "document.plugins\tDocument",
      "contents": "document.plugins"
    },
    {
      "trigger": "plugins\tDocument",
      "contents": "plugins"
    },
    {
      "trigger": "document.readyState\tDocument",
      "contents": "document.readyState"
    },
    {
      "trigger": "readyState\tDocument",
      "contents": "readyState"
    },
    {
      "trigger": "document.referrer\tDocument",
      "contents": "document.referrer"
    },
    {
      "trigger": "referrer\tDocument",
      "contents": "referrer"
    },
    {
      "trigger": "document.scripts\tDocument",
      "contents": "document.scripts"
    },
    {
      "trigger": "scripts\tDocument",
      "contents": "scripts"
    },
    {
      "trigger": "document.styleSheets\tDocument",
      "contents": "document.styleSheets"
    },
    {
      "trigger": "styleSheets\tDocument",
      "contents": "styleSheets"
    },
    {
      "trigger": "document.title\tDocument",
      "contents": "document.title"
    },
    {
      "trigger": "title\tDocument",
      "contents": "title"
    },
    {
      "trigger": "document.characterSet\tDocument",
      "contents": "document.characterSet"
    },
    {
      "trigger": "characterSet\tDocument",
      "contents": "characterSet"
    },
    {
      "trigger": "document.compatMode\tDocument",
      "contents": "document.compatMode"
    },
    {
      "trigger": "compatMode\tDocument",
      "contents": "compatMode"
    },
    {
      "trigger": "document.contentType\tDocument",
      "contents": "document.contentType"
    },
    {
      "trigger": "contentType\tDocument",
      "contents": "contentType"
    },
    {
      "trigger": "document.currentScript\tDocument",
      "contents": "document.currentScript"
    },
    {
      "trigger": "currentScript\tDocument",
      "contents": "currentScript"
    },
    {
      "trigger": "document.doctype\tDocument",
      "contents": "document.doctype"
    },
    {
      "trigger": "doctype\tDocument",
      "contents": "doctype"
    },
    {
      "trigger": "document.documentElement\tDocument",
      "contents": "document.documentElement"
    },
    {
      "trigger": "documentElement\tDocument",
      "contents": "documentElement"
    },
    {
      "trigger": "document.documentURI\tDocument",
      "contents": "document.documentURI"
    },
    {
      "trigger": "documentURI\tDocument",
      "contents": "documentURI"
    },
    {
      "trigger": "document.documentURIObject\tDocument",
      "contents": "document.documentURIObject"
    },
    {
      "trigger": "documentURIObject\tDocument",
      "contents": "documentURIObject"
    },
    {
      "trigger": "document.implementation\tDocument",
      "contents": "document.implementation"
    },
    {
      "trigger": "implementation\tDocument",
      "contents": "implementation"
    },
    {
      "trigger": "document.lastStyleSheetSet\tDocument",
      "contents": "document.lastStyleSheetSet"
    },
    {
      "trigger": "lastStyleSheetSet\tDocument",
      "contents": "lastStyleSheetSet"
    },
    {
      "trigger": "document.links\tDocument",
      "contents": "document.links"
    },
    {
      "trigger": "links\tDocument",
      "contents": "links"
    },
    {
      "trigger": "document.onoffline\tDocument",
      "contents": "document.onoffline"
    },
    {
      "trigger": "onoffline\tDocument",
      "contents": "onoffline"
    },
    {
      "trigger": "document.pointerLockElement\tDocument",
      "contents": "document.pointerLockElement"
    },
    {
      "trigger": "pointerLockElement\tDocument",
      "contents": "pointerLockElement"
    },
    {
      "trigger": "document.preferredStyleSheetSet\tDocument",
      "contents": "document.preferredStyleSheetSet"
    },
    {
      "trigger": "preferredStyleSheetSet\tDocument",
      "contents": "preferredStyleSheetSet"
    },
    {
      "trigger": "document.selectedStyleSheetSet\tDocument",
      "contents": "document.selectedStyleSheetSet"
    },
    {
      "trigger": "selectedStyleSheetSet\tDocument",
      "contents": "selectedStyleSheetSet"
    },
    {
      "trigger": "document.styleSheetSets\tDocument",
      "contents": "document.styleSheetSets"
    },
    {
      "trigger": "styleSheetSets\tDocument",
      "contents": "styleSheetSets"
    },
    {
      "trigger": "document.tooltipNode\tDocument",
      "contents": "document.tooltipNode"
    },
    {
      "trigger": "tooltipNode\tDocument",
      "contents": "tooltipNode"
    },
    {
      "trigger": "document.caretPositionFromPoint(x, y)\tDocument",
      "contents": "document.caretPositionFromPoint(${1:x}, ${2:y})"
    },
    {
      "trigger": "caretPositionFromPoint(x, y)\tDocument",
      "contents": "caretPositionFromPoint(${1:x}, ${2:y})"
    },
    {
      "trigger": "document.close()\tDocument",
      "contents": "document.close()"
    },
    {
      "trigger": "close()\tDocument",
      "contents": "close()"
    },
    {
      "trigger": "document.createNodeIterator(root, whatToShow, filter)\tDocument",
      "contents": "document.createNodeIterator(${1:root}, ${2:whatToShow}, ${3:filter})"
    },
    {
      "trigger": "createNodeIterator(root, whatToShow, filter)\tDocument",
      "contents": "createNodeIterator(${1:root}, ${2:whatToShow}, ${3:filter})"
    },
    {
      "trigger": "document.createRange()\tDocument",
      "contents": "document.createRange()"
    },
    {
      "trigger": "createRange()\tDocument",
      "contents": "createRange()"
    },
    {
      "trigger": "document.createTreeWalker(root, whatToShow, filter, entityReferenceExpansion)\tDocument",
      "contents": "document.createTreeWalker(${1:root}, ${2:whatToShow}, ${3:filter}, ${4:entityReferenceExpansion})"
    },
    {
      "trigger": "createTreeWalker(root, whatToShow, filter, entityReferenceExpansion)\tDocument",
      "contents": "createTreeWalker(${1:root}, ${2:whatToShow}, ${3:filter}, ${4:entityReferenceExpansion})"
    },
    {
      "trigger": "document.elementFromPoint(x, y)\tDocument",
      "contents": "document.elementFromPoint(${1:x}, ${2:y})"
    },
    {
      "trigger": "elementFromPoint(x, y)\tDocument",
      "contents": "elementFromPoint(${1:x}, ${2:y})"
    },
    {
      "trigger": "document.getElementsByClassName(names)\tDocument",
      "contents": "document.getElementsByClassName(${1:names})"
    },
    {
      "trigger": "document.getElementsByName(name)\tDocument",
      "contents": "document.getElementsByName(${1:name})"
    },
    {
      "trigger": "document.releaseCapture()\tDocument",
      "contents": "document.releaseCapture()"
    },
    {
      "trigger": "releaseCapture()\tDocument",
      "contents": "releaseCapture()"
    },
    {
      "trigger": "document.adoptNode(externalNode)\tDocument",
      "contents": "document.adoptNode(${1:externalNode})"
    },
    {
      "trigger": "adoptNode(externalNode)\tDocument",
      "contents": "adoptNode(${1:externalNode})"
    },
    {
      "trigger": "document.createAttribute(name)\tDocument",
      "contents": "document.createAttribute(${1:name})"
    },
    {
      "trigger": "createAttribute(name)\tDocument",
      "contents": "createAttribute(${1:name})"
    },
    {
      "trigger": "document.createCDATASection(data)\tDocument",
      "contents": "document.createCDATASection(${1:data})"
    },
    {
      "trigger": "createCDATASection(data)\tDocument",
      "contents": "createCDATASection(${1:data})"
    },
    {
      "trigger": "document.createComment(data)\tDocument",
      "contents": "document.createComment(${1:data})"
    },
    {
      "trigger": "createComment(data)\tDocument",
      "contents": "createComment(${1:data})"
    },
    {
      "trigger": "document.createDocumentFragment()\tDocument",
      "contents": "document.createDocumentFragment()"
    },
    {
      "trigger": "createDocumentFragment()\tDocument",
      "contents": "createDocumentFragment()"
    },
    {
      "trigger": "document.createElement(tagName)\tDocument",
      "contents": "document.createElement(${1:tagName})"
    },
    {
      "trigger": "createElement(tagName)\tDocument",
      "contents": "createElement(${1:tagName})"
    },
    {
      "trigger": "document.createElementNS(namespaceURI, qualifiedName)\tDocument",
      "contents": "document.createElementNS(${1:namespaceURI}, ${2:qualifiedName})"
    },
    {
      "trigger": "createElementNS(namespaceURI, qualifiedName)\tDocument",
      "contents": "createElementNS(${1:namespaceURI}, ${2:qualifiedName})"
    },
    {
      "trigger": "document.createExpression(xpathText, namespaceURLMapper)\tDocument",
      "contents": "document.createExpression(${1:xpathText}, ${2:namespaceURLMapper})"
    },
    {
      "trigger": "createExpression(xpathText, namespaceURLMapper)\tDocument",
      "contents": "createExpression(${1:xpathText}, ${2:namespaceURLMapper})"
    },
    {
      "trigger": "document.createNSResolver(node)\tDocument",
      "contents": "document.createNSResolver(${1:node})"
    },
    {
      "trigger": "createNSResolver(node)\tDocument",
      "contents": "createNSResolver(${1:node})"
    },
    {
      "trigger": "document.createProcessingInstruction(target, data)\tDocument",
      "contents": "document.createProcessingInstruction(${1:target}, ${2:data})"
    },
    {
      "trigger": "createProcessingInstruction(target, data)\tDocument",
      "contents": "createProcessingInstruction(${1:target}, ${2:data})"
    },
    {
      "trigger": "document.createTextNode(data)\tDocument",
      "contents": "document.createTextNode(${1:data})"
    },
    {
      "trigger": "createTextNode(data)\tDocument",
      "contents": "createTextNode(${1:data})"
    },
    {
      "trigger": "document.enableStyleSheetsForSet(name)\tDocument",
      "contents": "document.enableStyleSheetsForSet(${1:name})"
    },
    {
      "trigger": "enableStyleSheetsForSet(name)\tDocument",
      "contents": "enableStyleSheetsForSet(${1:name})"
    },
    {
      "trigger": "document.evaluate(xpathExpression, contextNode, namespaceResolver, resultType, result);\tDocument",
      "contents": "document.evaluate(${1:xpathExpression}, ${2:contextNode}, ${3:namespaceResolver}, ${4:resultType}, ${5:result});"
    },
    {
      "trigger": "evaluate(xpathExpression, contextNode, namespaceResolver, resultType, result);\tDocument",
      "contents": "evaluate(${1:xpathExpression}, ${2:contextNode}, ${3:namespaceResolver}, ${4:resultType}, ${5:result});"
    },
    {
      "trigger": "document.execCommand(aCommandName, aShowDefaultUI, aValueArgument)\tDocument",
      "contents": "document.execCommand(${1:aCommandName}, ${2:aShowDefaultUI}, ${3:aValueArgument})"
    },
    {
      "trigger": "execCommand(aCommandName, aShowDefaultUI, aValueArgument)\tDocument",
      "contents": "execCommand(${1:aCommandName}, ${2:aShowDefaultUI}, ${3:aValueArgument})"
    },
    {
      "trigger": "document.getElementById(id)\tDocument",
      "contents": "document.getElementById(${1:id})"
    },
    {
      "trigger": "document.getElementsByTagName(name)\tDocument",
      "contents": "document.getElementsByTagName(${1:name})"
    },
    {
      "trigger": "document.getElementsByTagNameNS(namespace, name)\tDocument",
      "contents": "document.getElementsByTagNameNS(${1:namespace}, ${2:name})"
    },
    {
      "trigger": "document.hasFocus()\tDocument",
      "contents": "document.hasFocus()"
    },
    {
      "trigger": "hasFocus()\tDocument",
      "contents": "hasFocus()"
    },
    {
      "trigger": "document.importNode(externalNode, deep)\tDocument",
      "contents": "document.importNode(${1:externalNode}, ${2:deep})"
    },
    {
      "trigger": "importNode(externalNode, deep)\tDocument",
      "contents": "importNode(${1:externalNode}, ${2:deep})"
    },
    {
      "trigger": "document.loadOverlay(url, observer)\tDocument",
      "contents": "document.loadOverlay(${1:url}, ${2:observer})"
    },
    {
      "trigger": "loadOverlay(url, observer)\tDocument",
      "contents": "loadOverlay(${1:url}, ${2:observer})"
    },
    {
      "trigger": "document.open()\tDocument",
      "contents": "document.open()"
    },
    {
      "trigger": "open()\tDocument",
      "contents": "open()"
    },
    {
      "trigger": "document.queryCommandSupported(command)\tDocument",
      "contents": "document.queryCommandSupported(${1:command})"
    },
    {
      "trigger": "queryCommandSupported(command)\tDocument",
      "contents": "queryCommandSupported(${1:command})"
    },
    {
      "trigger": "document.querySelector(selectors)\tDocument",
      "contents": "document.querySelector(${1:selectors})"
    },
    {
      "trigger": "document.querySelectorAll(selectors)\tDocument",
      "contents": "document.querySelectorAll(${1:selectors})"
    },
    {
      "trigger": "document.write(markup)\tDocument",
      "contents": "document.write(${1:markup})"
    },
    {
      "trigger": "write(markup)\tDocument",
      "contents": "write(${1:markup})"
    },
    {
      "trigger": "document.writeln(line)\tDocument",
      "contents": "document.writeln(${1:line})"
    },
    {
      "trigger": "writeln(line)\tDocument",
      "contents": "writeln(${1:line})"
    }
  ]
}
