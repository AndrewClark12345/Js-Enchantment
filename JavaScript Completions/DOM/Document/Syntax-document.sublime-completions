{
  "scope": "source.js",

  "completions":
  [
    { "trigger": "-syntax-document.URL", "contents": "/* string = document.URL */" },
    { "trigger": "-syntax-document.activeElement", "contents": "/* var curElement = document.activeElement; */" },
    { "trigger": "-syntax-document.anchors", "contents": "/* nodeList = document.anchors; */" },
    { "trigger": "-syntax-document.applets", "contents": "/* nodeList = document.applets */" },
    { "trigger": "-syntax-document.body", "contents": "/* var objRef = document.body; \ndocument.body = objRef; */" },
    { "trigger": "-syntax-document.defaultView", "contents": "/* var win = document.defaultView; */" },
    { "trigger": "-syntax-document.designMode", "contents": "/* iframe_node.contentDocument.designMode = \"on\"; */" },
    { "trigger": "-syntax-document.domain", "contents": "/* var domainString = document.domain;\ndocument.domain = string; */" },
    { "trigger": "-syntax-document.embeds", "contents": "/* nodeList = document.embeds */" },
    { "trigger": "-syntax-document.forms", "contents": "/* collection = document.forms; */" },
    { "trigger": "-syntax-document.head", "contents": "/* var objRef = document.head; */" },
    { "trigger": "-syntax-document.images", "contents": "/* var htmlCollection = document.images; */" },
    { "trigger": "-syntax-document.lastModified", "contents": "/* string = document.lastModified; */" },
    { "trigger": "-syntax-document.location", "contents": "/* locationObj = document.location\ndocument.location = 'http://www.mozilla.org' // Equivalent to document.location.href = 'http://www.mozilla.org' */" },
    { "trigger": "-syntax-document.plugins", "contents": "/* embedArrayObj = document.plugins */" },
    { "trigger": "-syntax-document.readyState", "contents": "/* var string = document.readyState; */" },
    { "trigger": "-syntax-document.referrer", "contents": "/* string = document.referrer; */" },
    { "trigger": "-syntax-document.scripts", "contents": "/* var scriptList = document.scripts; */" },
    { "trigger": "-syntax-document.styleSheets", "contents": "/* var styleSheetList = document.styleSheets; */" },
    { "trigger": "-syntax-document.title", "contents": "/* var docTitle = document.title;\ndocument.title = newTitle; */" },
    { "trigger": "-syntax-document.characterSet", "contents": "/* document.characterSet */" },
    { "trigger": "-syntax-document.compatMode", "contents": "/* mode = document.compatMode */" },
    { "trigger": "-syntax-document.contentType", "contents": "/* contentType = document.contentType; */" },
    { "trigger": "-syntax-document.currentScript", "contents": "/* var curScriptElement = document.currentScript; */" },
    { "trigger": "-syntax-document.doctype", "contents": "/* doctype = document.doctype; */" },
    { "trigger": "-syntax-document.documentElement", "contents": "/* var element = document.documentElement; */" },
    { "trigger": "-syntax-document.documentURI", "contents": "/* var string = document.documentURI; */" },
    { "trigger": "-syntax-document.documentURIObject", "contents": "/* var uri = doc.documentURIObject; */" },
    { "trigger": "-syntax-document.implementation", "contents": "/* DOMImpObj = document.implementation; */" },
    { "trigger": "-syntax-document.lastStyleSheetSet", "contents": "/* lastStyleSheetSet = document.lastStyleSheetSet */" },
    { "trigger": "-syntax-document.links", "contents": "/* nodeList = document.links */" },
    { "trigger": "-syntax-document.pointerLockElement", "contents": "/* var element = document.pointerLockElement; */" },
    { "trigger": "-syntax-document.preferredStyleSheetSet", "contents": "/* preferredStyleSheetSet = document.preferredStyleSheetSet */" },
    { "trigger": "-syntax-document.selectedStyleSheetSet", "contents": "/* currentStyleSheetSet = document.selectedStyleSheetSet\n\ndocument.selectedStyleSheet = newStyleSheetSet */" },
    { "trigger": "-syntax-document.styleSheetSets", "contents": "/* sets = document.styleSheetSets */" },
    { "trigger": "-syntax-document.tooltipNode", "contents": "/* document.tooltipNode; */" },
    { "trigger": "-syntax-document.caretPositionFromPoint()", "contents": "/* var cp = document.caretPositionFromPoint(float x, float y); */" },
    { "trigger": "-syntax-document.close()", "contents": "/* document.close(); */" },
    { "trigger": "-syntax-document.createNodeIterator()", "contents": "/* var nodeIterator = document.createNodeIterator(root, whatToShow, filter); */" },
    { "trigger": "-syntax-document.createRange()", "contents": "/* range = document.createRange(); */" },
    { "trigger": "-syntax-document.createTreeWalker()", "contents": "/* treeWalker = document.createTreeWalker(root, whatToShow, filter, entityReferenceExpansion); */" },
    { "trigger": "-syntax-document.elementFromPoint()", "contents": "/* var element = document.elementFromPoint(x, y); */" },
    { "trigger": "-syntax-document.getElementsByClassName()", "contents": "/* var elements = document.getElementsByClassName(names); // or:\nvar elements = rootElement.getElementsByClassName(names); */" },
    { "trigger": "-syntax-document.getElementsByName()", "contents": "/* elements = document.getElementsByName(name) */" },
    { "trigger": "-syntax-document.releaseCapture()", "contents": "/* document.releaseCapture() */" },
    { "trigger": "-syntax-document.adoptNode()", "contents": "/* node = document.adoptNode(externalNode); */" },
    { "trigger": "-syntax-document.createAttribute()", "contents": "/* attribute = document.createAttribute(name) */" },
    { "trigger": "-syntax-document.createCDATASection()", "contents": "/* CDATASectionNode = document.createCDATASection(data) */" },
    { "trigger": "-syntax-document.createComment()", "contents": "/* CommentNode = document.createComment(data) */" },
    { "trigger": "-syntax-document.createdocumentFragment()", "contents": "/* var docFragment = document.createDocumentFragment(); */" },
    { "trigger": "-syntax-document.createElement()", "contents": "/* var element = document.createElement(tagName); */" },
    { "trigger": "-syntax-document.createElementNS()", "contents": "/* element = document.createElementNS(namespaceURI, qualifiedName); */" },
    { "trigger": "-syntax-document.createExpression()", "contents": "/* xpathExpr = document.createExpression(xpathText, namespaceURLMapper); */" },
    { "trigger": "-syntax-document.createNSResolver()", "contents": "/* nsResolver = document.createNSResolver(node); */" },
    { "trigger": "-syntax-document.createProcessingInstruction()", "contents": "/* Processing instruction node = document.createProcessingInstruction(target, data) */" },
    { "trigger": "-syntax-document.createTextNode()", "contents": "/* text = document.createTextNode(data); */" },
    { "trigger": "-syntax-document.enableStyleSheetsForSet()", "contents": "/* document.enableStyleSheetsForSet(name) */" },
    { "trigger": "-syntax-document.evaluate()", "contents": "/* var xpathResult = document.evaluate(xpathExpression, contextNode, namespaceResolver, resultType, result); */" },
    { "trigger": "-syntax-document.execCommand()", "contents": "/* execCommand(String aCommandName, Boolean aShowDefaultUI, String aValueArgument) */" },
    { "trigger": "-syntax-document.getElementById()", "contents": "/* element = document.getElementById(id); */" },
    { "trigger": "-syntax-document.getElementsByTagName()", "contents": "/* var elements = document.getElementsByTagName(name); */" },
    { "trigger": "-syntax-document.getElementsByTagNameNS()", "contents": "/* elements = document.getElementsByTagNameNS(namespace, name) */" },
    { "trigger": "-syntax-document.hasFocus()", "contents": "/* focused = document.hasFocus(); */" },
    { "trigger": "-syntax-document.importNode()", "contents": "/* var node = document.importNode(externalNode, deep); */" },
    { "trigger": "-syntax-document.loadOverlay()", "contents": "/* document.loadOverlay(url, observer); */" },
    { "trigger": "-syntax-document.open()", "contents": "/* document.open(); */" },
    { "trigger": "-syntax-document.queryCommandSupported()", "contents": "/* isSupported = document.queryCommandSupported(command); */" },
    { "trigger": "-syntax-document.querySelector()()", "contents": "/* element = document.querySelector(selectors); */" },
    { "trigger": "-syntax-document.querySelectorAll()", "contents": "/* elementList = document.querySelectorAll(selectors); */" },
    { "trigger": "-syntax-document.write()", "contents": "/* document.write(markup); */" },
    { "trigger": "-syntax-document.writeln()", "contents": "/* document.writeln(line); */" },
  ]
}