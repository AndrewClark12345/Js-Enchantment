{
  "scope": "source.js",

  "completions":
  [
  	{ "trigger": "-description-Function", "contents": "/*\n\tThe Function constructor creates a new Function object. In JavaScript every function is actually a Function object.\n*/" },
    { "trigger": "-description-Function.length", "contents": "/*\n\tThe length property specifies the number of arguments expected by the function.\n*/" },
    { "trigger": "-description-Function.prototype.apply()", "contents": "/*\n\tThe apply() method calls a function with a given this value and arguments provided as an array (or an array-like object).\n*/" },
    { "trigger": "-description-Function.prototype.bind()", "contents": "/*\n\tThe bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.\n*/" },
    { "trigger": "-description-Function.prototype.call()", "contents": "/*\n\tThe call() method calls a function with a given this value and arguments provided individually.\n*/" },
    { "trigger": "-description-Function.prototype.toString()", "contents": "/*\n\tThe toString() method returns a string representing the source code of the function.\n*/" },
  ]
}