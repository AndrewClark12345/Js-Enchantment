{
  "scope": "source.js",

  "completions":
  [ 
    {
      "trigger": "new Array()\tArray",
      "contents": "new Array()"
    },
    {
      "trigger": "new RegExp()\tRegExp",
      "contents": "new RegExp()"
    },
    {
      "trigger": "new String()\tString",
      "contents": "new String()"
    },
    {
      "trigger": "global\tRegExp",
      "contents": "global"
    },
    {
      "trigger": "ignoreCase\tRegExp",
      "contents": "ignoreCase"
    },
    {
      "trigger": "lastIndex\tRegExp",
      "contents": "lastIndex"
    },
    {
      "trigger": "length\tRegExp",
      "contents": "length"
    },
    {
      "trigger": "multiline\tRegExp",
      "contents": "multiline"
    },
    {
      "trigger": "source\tRegExp",
      "contents": "source"
    },

    {
      "trigger": "length\tString",
      "contents": "length"
    },

    {
      "trigger": "length\tArray",
      "contents": "length"
    },

    {
      "trigger": "exec(string)\tRegExp",
      "contents": "exec(${1:string})"
    },
    {
      "trigger": "test(string)\tRegExp",
      "contents": "test(${1:string})"
    },
    {
      "trigger": "toString()\tRegExp",
      "contents": "toString()"
    },

    {
      "trigger": "replace(regexp|substr, 'string')\tString",
      "contents": "replace(${1:regexp|substr}, ${2:'string'})"
    },
    {
      "trigger": "match(regexp)\tString",
      "contents": "match(${1:regexp})"
    },
    {
      "trigger": "search(regexp)\tString",
      "contents": "search(${1:regexp})"
    },
    {
      "trigger": "split(separator)\tString",
      "contents": "split(${1:separator})"
    },
    {
      "trigger": "fromCharCode(num1)\tString",
      "contents": "fromCharCode(${1:num1})"
    },
    {
      "trigger": "charAt(index)\tString",
      "contents": "charAt(${1:index})"
    },
    {
      "trigger": "charCodeAt(index)\tString",
      "contents": "charCodeAt(${1:index})"
    },
    {
      "trigger": "concat(value1, value2)\tString",
      "contents": "concat(${1:value1}, ${2:value2})"
    },
    {
      "trigger": "indexOf(searchValue)\tString",
      "contents": "indexOf(${1:searchValue})"
    },
    {
      "trigger": "lastIndexOf(searchValue)\tString",
      "contents": "lastIndexOf(${1:searchValue})"
    },
    {
      "trigger": "localeCompare(compareString)\tString",
      "contents": "localeCompare(${1:compareString})"
    },
    {
      "trigger": "substring(indexA)\tString",
      "contents": "substring(${1:indexA})"
    },
    {
      "trigger": "substr(start)\tString",
      "contents": "substr(${1:start})"
    },
    {
      "trigger": "toLowerCase()\tString",
      "contents": "toLowerCase()"
    },
    {
      "trigger": "toLocaleLowerCase()\tString",
      "contents": "toLocaleLowerCase()"
    },
    {
      "trigger": "toUpperCase()\tString",
      "contents": "toUpperCase()"
    },
    {
      "trigger": "toLocaleUpperCase()\tString",
      "contents": "toLocaleUpperCase()"
    },
    {
      "trigger": "toString()\tString",
      "contents": "toString()"
    },
    {
      "trigger": "trim()\tString",
      "contents": "trim()"
    },
    {
      "trigger": "valueOf()\tString",
      "contents": "valueOf()"
    },

    {
      "trigger": "join(separator)\tArray",
      "contents": "join(${1:separator})"
    },
    {
      "trigger": "push(element1)\tArray",
      "contents": "push(${1:element1})"
    },
    {
      "trigger": "pop()\tArray",
      "contents": "pop()"
    },
    {
      "trigger": "shift()\tArray",
      "contents": "shift()"
    },
    {
      "trigger": "unshift(element1)\tArray",
      "contents": "unshift(${1:element1})"
    },
    {
      "trigger": "slice(begin)\tArray",
      "contents": "slice(${1:begin})"
    },
    {
      "trigger": "splice(index, howMany)\tArray",
      "contents": "splice(${1:index}, ${2:howMany})"
    },
    {
      "trigger": "reverse()\tArray",
      "contents": "reverse()"
    },
    {
      "trigger": "sort(compareFunction)\tArray",
      "contents": "sort(${1:compareFunction})"
    },
    {
      "trigger": "map(callback)\tArray",
      "contents": "map(${1:callback})"
    },
    {
      "trigger": "filter(callback)\tArray",
      "contents": "filter(${1:callback})"
    },
    {
      "trigger": "every(callback)\tArray",
      "contents": "every(${1:callback})"
    },
    {
      "trigger": "some(callback)\tArray",
      "contents": "some(${1:callback})"
    },
    {
      "trigger": "reduce(callback)\tArray",
      "contents": "reduce(${1:callback})"
    },
    {
      "trigger": "reduceRight(callback)\tArray",
      "contents": "reduceRight(${1:callback})"
    },
    {
      "trigger": "indexOf(searchElement)\tArray",
      "contents": "indexOf(${1:searchElement})"
    },
    {
      "trigger": "isArray(Object)\tArray",
      "contents": "isArray(${1:Object})"
    },
    {
      "trigger": "lastIndexOf(searchElement)\tArray",
      "contents": "lastIndexOf(${1:searchElement})"
    },
    {
      "trigger": "forEach(callback)\tArray",
      "contents": "forEach(${1:callback})"
    },
    {
      "trigger": "toLocaleString()\tArray",
      "contents": "toString()"
    },
    {
      "trigger": "toString()\tArray",
      "contents": "toString()"
    }
  ]
}